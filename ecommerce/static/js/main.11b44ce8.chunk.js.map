{"version":3,"sources":["services/LocalStorage.service.ts","hooks/useModeUser.ts","services/InsertTheme.service.ts","context/GeneralContext.tsx","App.tsx","reportWebVitals.ts","index.tsx","routes/index.ts"],"names":["LocalStorage","get","key","window","localStorage","getItem","set","value","setItem","useModeUser","mode","useEffect","name","document","body","setAttribute","inicialState","GeneralContext","createContext","GeneralProvider","children","initialMode","useState","setMode","sendValues","Provider","Login","lazy","Home","App","fallback","className","path","$LOGIN","component","$REGISTER","$HOME","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","$USER","$ABOUT"],"mappings":"qHAAA,kCAAO,IAAMA,EAAe,CAC1BC,IAD0B,SACrBC,GACH,OAAOC,OAAOC,aAAaC,QAAQH,IAErCI,IAJ0B,SAIrBJ,EAAaK,GAChBJ,OAAOC,aAAaI,QAAQN,EAAKK,M,qFCKtBE,EANK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,KACrBC,qBAAU,WCLe,IAACC,EAAcL,EAAdK,EDMZ,aCN0BL,EDMZG,ECN8BG,SAASC,KAAKC,aAAaH,EAAML,KDOxF,CAACG,K,eEFAM,EAAqB,CACzBN,KAAM,kCAGFO,EAAiBC,wBAAoBF,GAE9BG,EAAkB,SAAC,GAA8D,IAA5DC,EAA2D,EAA3DA,SAC1BC,EAAcrB,IAAaC,IAAI,aAAe,OACpD,EAAwBqB,mBAAiBD,GAAzC,mBAAOX,EAAP,KAAaa,EAAb,KAEAd,EAAY,CAAEC,SAEd,IAAMc,EAAmB,CACvBd,KAAMA,EACNa,QAASA,GAGX,OAAO,cAACN,EAAeQ,SAAhB,CAAyBlB,MAAOiB,EAAhC,SACJJ,KAIUH,O,2JCtBTS,EAAQC,gBAAK,kBAAM,uDACnBC,EAAOD,gBAAK,kBAAM,sDAgBTE,MAdf,WACE,OAAO,cAAC,WAAD,CAAUC,SAAU,KAApB,SACL,cAAC,IAAD,UACE,qBAAKC,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAMC,IAAQC,UAAWR,IAChC,cAAC,IAAD,CAAOM,KAAMG,IAAWD,UAAWR,IACnC,cAAC,IAAD,CAAOM,KAAMI,IAAOF,UAAWN,c,QCD1BS,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJnC,SAASoC,eAAe,SAG1BZ,K,+BChBA,0KACO,IAAMD,EAAQ,aACnBc,EAAQ,kBACRC,EAAS,mBACTlB,EAAS,mBACTE,EAAY,wB","file":"static/js/main.11b44ce8.chunk.js","sourcesContent":["export const LocalStorage = {\n  get (key: string) {\n    return window.localStorage.getItem(key)\n  },\n  set (key: string, value: string) {\n    window.localStorage.setItem(key, value)\n  }\n}","import { useEffect } from 'react'\nimport { Mode } from 'types'\nimport { InsertTheme } from 'services/InsertTheme.service'\n\nconst useModeUser = ({ mode }: Mode) => {\n  useEffect(() => {\n    InsertTheme('data-theme', mode)\n  }, [mode])\n}\n\nexport default useModeUser","export const InsertTheme = (name: string, value: string) => document.body.setAttribute(name, value)","import { createContext, useState } from 'react'\nimport useModeUser from 'hooks/useModeUser'\nimport { LocalStorage } from 'services/LocalStorage.service'\nimport { Mode } from 'types'\n\nconst inicialState: Mode = {\n  mode: 'No tienes acceso a este objeto'\n}\n\nconst GeneralContext = createContext<Mode>(inicialState)\n\nexport const GeneralProvider = ({ children }: React.HTMLAttributes<Element>): JSX.Element => {\n  const initialMode = LocalStorage.get('ModeUser') || 'dark'\n  const [mode, setMode] = useState<string>(initialMode)\n\n  useModeUser({ mode })\n\n  const sendValues: Mode = {\n    mode: mode,\n    setMode: setMode\n  }\n\n  return <GeneralContext.Provider value={sendValues}>\n    {children}\n  </GeneralContext.Provider>\n}\n\nexport default GeneralContext","import { lazy, Suspense } from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { $HOME, $LOGIN, $REGISTER } from 'routes'\nimport 'styles/App.css'\n\nconst Login = lazy(() => import('views/Login'))\nconst Home = lazy(() => import('views/Home'))\n\nfunction App (): JSX.Element {\n  return <Suspense fallback={null}>\n    <BrowserRouter>\n      <div className=\"App\">\n        <Switch>\n          <Route path={$LOGIN} component={Login} />\n          <Route path={$REGISTER} component={Login} />\n          <Route path={$HOME} component={Home} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  </Suspense>\n}\n\nexport default App","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { GeneralProvider } from 'context/GeneralContext'\nimport reportWebVitals from './reportWebVitals'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <GeneralProvider>\n      <App />\n    </GeneralProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nreportWebVitals()","// eslint-disable-next-line one-var\nexport const $HOME = '/ecommerce',\n  $USER = '/ecommerce/user',\n  $ABOUT = '/ecommerce/about',\n  $LOGIN = '/ecommerce/login',\n  $REGISTER = '/ecommerce/register'"],"sourceRoot":""}