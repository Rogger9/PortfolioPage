var C=Object.getOwnPropertySymbols;var w=Object.prototype.hasOwnProperty,O=Object.prototype.propertyIsEnumerable;var h=(r,n)=>{var e={};for(var t in r)w.call(r,t)&&n.indexOf(t)<0&&(e[t]=r[t]);if(r!=null&&C)for(var t of C(r))n.indexOf(t)<0&&O.call(r,t)&&(e[t]=r[t]);return e};import{G as g}from"./Gif.19041ca5.js";import{b as m}from"./vendor.e9d19354.js";import{j as f}from"./index.61cbec1b.js";function j(r,n){if(r==null)return{};var e=v(r,n),t,o;if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(r);for(o=0;o<i.length;o++)t=i[o],!(n.indexOf(t)>=0)&&(!Object.prototype.propertyIsEnumerable.call(r,t)||(e[t]=r[t]))}return e}function v(r,n){if(r==null)return{};var e={},t=Object.keys(r),o,i;for(i=0;i<t.length;i++)o=t[i],!(n.indexOf(o)>=0)&&(e[o]=r[o]);return e}function p(){return p=Object.assign||function(r){for(var n=1;n<arguments.length;n++){var e=arguments[n];for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(r[t]=e[t])}return r},p.apply(this,arguments)}function b(r,n){var e=Object.keys(r);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(r);n&&(t=t.filter(function(o){return Object.getOwnPropertyDescriptor(r,o).enumerable})),e.push.apply(e,t)}return e}function u(r){for(var n=1;n<arguments.length;n++){var e=arguments[n]!=null?arguments[n]:{};n%2?b(Object(e),!0).forEach(function(t){P(r,t,e[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(e)):b(Object(e)).forEach(function(t){Object.defineProperty(r,t,Object.getOwnPropertyDescriptor(e,t))})}return r}function P(r,n,e){return n in r?Object.defineProperty(r,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):r[n]=e,r}const k={breakpointCols:void 0,className:void 0,columnClassName:void 0,children:void 0,columnAttrs:void 0,column:void 0},d=2;class y extends m.Component{constructor(n){super(n);this.reCalculateColumnCount=this.reCalculateColumnCount.bind(this),this.reCalculateColumnCountDebounce=this.reCalculateColumnCountDebounce.bind(this);let e;this.props.breakpointCols&&this.props.breakpointCols.default?e=this.props.breakpointCols.default:e=parseInt(this.props.breakpointCols)||d,this.state={columnCount:e}}componentDidMount(){this.reCalculateColumnCount(),window&&window.addEventListener("resize",this.reCalculateColumnCountDebounce)}componentDidUpdate(){this.reCalculateColumnCount()}componentWillUnmount(){window&&window.removeEventListener("resize",this.reCalculateColumnCountDebounce)}reCalculateColumnCountDebounce(){if(!window||!window.requestAnimationFrame){this.reCalculateColumnCount();return}window.cancelAnimationFrame&&window.cancelAnimationFrame(this._lastRecalculateAnimationFrame),this._lastRecalculateAnimationFrame=window.requestAnimationFrame(()=>{this.reCalculateColumnCount()})}reCalculateColumnCount(){const n=window&&window.innerWidth||1/0;let e=this.props.breakpointCols;typeof e!="object"&&(e={default:parseInt(e)||d});let t=1/0,o=e.default||d;for(let i in e){const s=parseInt(i);s>0&&n<=s&&s<t&&(t=s,o=e[i])}o=Math.max(1,parseInt(o)||1),this.state.columnCount!==o&&this.setState({columnCount:o})}itemsInColumns(){const n=this.state.columnCount,e=new Array(n),t=m.Children.toArray(this.props.children);for(let o=0;o<t.length;o++){const i=o%n;e[i]||(e[i]=[]),e[i].push(t[o])}return e}renderColumns(){const{column:n,columnAttrs:e={},columnClassName:t}=this.props,o=this.itemsInColumns(),i=`${100/o.length}%`;let s=t;s&&typeof s!="string"&&(this.logDeprecated('The property "columnClassName" requires a string'),typeof s=="undefined"&&(s="my-masonry-grid_column"));const a=u(u(u({},n),e),{},{style:u(u({},e.style),{},{width:i}),className:s});return o.map((l,c)=>m.createElement("div",p({},a,{key:c}),l))}logDeprecated(n){console.error("[Masonry]",n)}render(){const n=this.props,{children:e,breakpointCols:t,columnClassName:o,columnAttrs:i,column:s,className:a}=n,l=j(n,["children","breakpointCols","columnClassName","columnAttrs","column","className"]);let c=a;return typeof a!="string"&&(this.logDeprecated('The property "className" requires a string'),typeof a=="undefined"&&(c="my-masonry-grid")),m.createElement("div",p({},l,{className:c}),this.renderColumns())}}y.defaultProps=k;const N={default:6,1320:5,1100:4,880:3,660:2,440:1},x=({gifs:r})=>f("div",{className:"listOfGifs",children:f(y,{breakpointCols:N,className:"my-masonry-grid",columnClassName:"my-masonry-grid_column",children:r.map(a=>{var l=a,{id:n,title:e,url:t,width:o,height:i}=l,s=h(l,["id","title","url","width","height"]);return f(g,{title:e,url:t,id:n,width:o,height:i,extraInfo:s},n)})})});export{x as default};
